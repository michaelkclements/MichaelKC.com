import React from 'react'
import Link from 'gatsby-link'
import Img from 'gatsby-image'
import styled from 'styled-components'
import { Section, Logo } from '../components'

const Cols = styled.div`
  display: flex;
`

const Col = styled.div`
  color: #fff;
  display: flex;
  flex: 1;
  flex-direction: column;
  justify-content: center;
`

const Images = styled.div`
  flex: 1;
`

const Image = styled(Img)`
  box-shadow: 6px 6px 0 rgba(0, 0, 0, 0.1);
  float: left;
  width: 33.33%;
`

export default ({ data: { intro, work, workImages } }) =>
  <React.Fragment>

    <Section>
      <Logo />
    </Section>

    <Section>

      <Cols>
        <Col>
          <div dangerouslySetInnerHTML={{__html: intro.sectionText.childMarkdownRemark.html}} />
        </Col>
        <Col>
          <Images>
            {
              workImages.edges.map((image, i) =>
                <Image
                  sizes={image.node.sizes}
                />
              )
            }
          </Images>
        </Col>
      </Cols>

    </Section>

    <Section>

      <Cols>
        <Col>
          <div dangerouslySetInnerHTML={{__html: work.sectionText.childMarkdownRemark.html}} />
        </Col>
        <Col>
          <Images>

            <svg height='60' width='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'>
              <path d='M0,0 L60,0 L60,60 L0,60 L0,0 Z M2,2 L2,58 L58,58 L58,2 L2,2 Z M40.5140548,46.650794 C41.6141666,48.5121066 43.0454389,49.8802432 45.5768229,49.8802432 C47.7033589,49.8802432 49.0618105,48.7789067 49.0618105,47.2571579 C49.0618105,45.4335747 47.6660817,44.7876849 45.3254183,43.7267726 L44.042388,43.1563414 C40.3389385,41.5214047 37.8786413,39.4732423 37.8786413,35.143355 C37.8786413,31.1548281 40.8114057,28.1185171 45.3947713,28.1185171 C48.6578294,28.1185171 51.0036942,29.2953122 52.6941733,32.376539 L48.6977073,35.035557 C47.8177913,33.4006203 46.8685223,32.7565271 45.3947713,32.7565271 C43.8915453,32.7565271 42.9388086,33.7446756 42.9388086,35.035557 C42.9388086,36.6309677 43.8924122,37.2768575 46.0943696,38.2650061 L47.3773998,38.834539 C51.7379689,40.7722085 54.2,42.7476073 54.2,47.1888858 C54.2,51.9769147 50.570238,54.6 45.6955899,54.6 C40.9293058,54.6 37.8500332,52.2464098 36.3433395,49.1615897 L40.5140548,46.650794 Z M21.9915562,47.031914 C22.8115358,48.531895 23.5574527,49.8000608 25.3508273,49.8000608 C27.0657307,49.8000608 28.1475747,49.1082513 28.1475747,46.4182854 L28.1475747,28.1185171 L33.3672294,28.1185171 L33.3672294,46.4910118 C33.3672294,52.0636685 30.1984053,54.6 25.5730153,54.6 C21.3937647,54.6 18.9735025,52.3700282 17.7426515,49.6841531 L21.9915562,47.031914 Z' fill='#fff' />
            </svg>

            <svg height='60' width='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'>
              <path d='M0,0 L60,0 L60,60 L0,60 L0,0 Z M2,2 L2,58 L58,58 L58,2 L2,2 Z M40.5140548,46.650794 C41.6141666,48.5121066 43.0454389,49.8802432 45.5768229,49.8802432 C47.7033589,49.8802432 49.0618105,48.7789067 49.0618105,47.2571579 C49.0618105,45.4335747 47.6660817,44.7876849 45.3254183,43.7267726 L44.042388,43.1563414 C40.3389385,41.5214047 37.8786413,39.4732423 37.8786413,35.143355 C37.8786413,31.1548281 40.8114057,28.1185171 45.3947713,28.1185171 C48.6578294,28.1185171 51.0036942,29.2953122 52.6941733,32.376539 L48.6977073,35.035557 C47.8177913,33.4006203 46.8685223,32.7565271 45.3947713,32.7565271 C43.8915453,32.7565271 42.9388086,33.7446756 42.9388086,35.035557 C42.9388086,36.6309677 43.8924122,37.2768575 46.0943696,38.2650061 L47.3773998,38.834539 C51.7379689,40.7722085 54.2,42.7476073 54.2,47.1888858 C54.2,51.9769147 50.570238,54.6 45.6955899,54.6 C40.9293058,54.6 37.8500332,52.2464098 36.3433395,49.1615897 L40.5140548,46.650794 Z M21.9915562,47.031914 C22.8115358,48.531895 23.5574527,49.8000608 25.3508273,49.8000608 C27.0657307,49.8000608 28.1475747,49.1082513 28.1475747,46.4182854 L28.1475747,28.1185171 L33.3672294,28.1185171 L33.3672294,46.4910118 C33.3672294,52.0636685 30.1984053,54.6 25.5730153,54.6 C21.3937647,54.6 18.9735025,52.3700282 17.7426515,49.6841531 L21.9915562,47.031914 Z' fill='#fff' />
            </svg>

            <svg height='60' width='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'>
              <path d='M0,0 L60,0 L60,60 L0,60 L0,0 Z M2,2 L2,58 L58,58 L58,2 L2,2 Z M40.5140548,46.650794 C41.6141666,48.5121066 43.0454389,49.8802432 45.5768229,49.8802432 C47.7033589,49.8802432 49.0618105,48.7789067 49.0618105,47.2571579 C49.0618105,45.4335747 47.6660817,44.7876849 45.3254183,43.7267726 L44.042388,43.1563414 C40.3389385,41.5214047 37.8786413,39.4732423 37.8786413,35.143355 C37.8786413,31.1548281 40.8114057,28.1185171 45.3947713,28.1185171 C48.6578294,28.1185171 51.0036942,29.2953122 52.6941733,32.376539 L48.6977073,35.035557 C47.8177913,33.4006203 46.8685223,32.7565271 45.3947713,32.7565271 C43.8915453,32.7565271 42.9388086,33.7446756 42.9388086,35.035557 C42.9388086,36.6309677 43.8924122,37.2768575 46.0943696,38.2650061 L47.3773998,38.834539 C51.7379689,40.7722085 54.2,42.7476073 54.2,47.1888858 C54.2,51.9769147 50.570238,54.6 45.6955899,54.6 C40.9293058,54.6 37.8500332,52.2464098 36.3433395,49.1615897 L40.5140548,46.650794 Z M21.9915562,47.031914 C22.8115358,48.531895 23.5574527,49.8000608 25.3508273,49.8000608 C27.0657307,49.8000608 28.1475747,49.1082513 28.1475747,46.4182854 L28.1475747,28.1185171 L33.3672294,28.1185171 L33.3672294,46.4910118 C33.3672294,52.0636685 30.1984053,54.6 25.5730153,54.6 C21.3937647,54.6 18.9735025,52.3700282 17.7426515,49.6841531 L21.9915562,47.031914 Z' fill='#fff' />
            </svg>

          </Images>
        </Col>
      </Cols>

    </Section>

  </React.Fragment>

  export const homeQuery = graphql`
    query homeQuery {

      intro: contentfulSection(sectionName: {eq: "Intro"}) {
        sectionText {
          childMarkdownRemark {
            html
          }
        }
      }

      work: contentfulSection(sectionName: {eq: "Work"}) {
        sectionText {
          childMarkdownRemark {
            html
          }
        }
      }

      workImages: allContentfulAsset(filter: {title: {regex: "/work-/"}}) {
        edges {
          node {
            sizes(maxWidth: 500, maxHeight: 500) {
              ...GatsbyContentfulSizes_withWebp
            }
          }
        }
      }
    }
  `
